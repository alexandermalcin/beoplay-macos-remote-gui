on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Build Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: macOS-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Build project
        run: make clean release-unsigned
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

#
# Note: I am changing the release process due to Apple Notarization requirements,
#       see https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution
#
#
#      - name: Upload Release Asset
#        id: upload-release-asset 
#        uses: actions/upload-release-asset@v1.0.1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#          asset_path: ./BeoplayRemoteGUI.dmg
#          asset_name: BeoplayRemoteGUI.dmg
#          asset_content_type: application/octet-stream
